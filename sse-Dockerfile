# Build stage
FROM node:20 AS builder

# Install pnpm and esbuild
RUN corepack enable && corepack prepare pnpm@latest --activate && \
  npm install -g esbuild

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN esbuild src/sse.ts --outfile=dist/sse.cjs --bundle --platform=node --format=cjs --banner:js='#!/usr/bin/env node' && \
  chmod +x dist/sse.cjs

# Production stage
FROM node:20-alpine

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install production dependencies only
RUN pnpm install --prod --frozen-lockfile

# Copy built files from builder stage
COPY --from=builder /app/dist ./dist

# Set environment variables
ENV NODE_ENV=production

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3001/ || exit 1

# Start the application
CMD ["node", "dist/sse.cjs", "${VERCEL_API_KEY}"] 